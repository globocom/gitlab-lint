basePath: /api/v1
definitions:
  api.MetaResponse:
    properties:
      currentPage:
        type: integer
      perPage:
        type: integer
      totalOfItems:
        type: integer
      totalOfPages:
        type: integer
    type: object
  api.Response:
    properties:
      data:
        type: object
      meta:
        $ref: '#/definitions/api.MetaResponse'
        type: object
    type: object
  api.Service:
    properties:
      elapsed:
        type: string
      message:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  api.Status:
    properties:
      project:
        type: string
      services:
        items:
          $ref: '#/definitions/api.Service'
        type: array
      status:
        type: string
      version:
        type: string
    type: object
  rules.Project:
    properties:
      rules:
        additionalProperties:
          type: integer
        type: object
    type: object
  rules.Rule:
    properties:
      description:
        type: string
      level:
        type: string
      namespaceId:
        type: integer
      namespacePath:
        type: string
      path:
        type: string
      pathWithNamespace:
        type: string
      projectId:
        type: integer
      ruleId:
        type: string
      webUrl:
        type: string
    type: object
  rules.Stats:
    properties:
      createdAt:
        type: string
      gitlabProjectsCount:
        type: integer
      levelsCount:
        additionalProperties:
          type: integer
        type: object
      projectsCount:
        type: integer
      registeredRulesCount:
        type: integer
      rulesCount:
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    name: API Support
    url: https://github.com/globocom/gitlab-lint
  description: gitlab-lint API data
  license:
    name: BSD-3-Clause License
    url: https://opensource.org/licenses/BSD-3-Clause
  title: gitlab-lint API
  version: 0.1.0
paths:
  /levels:
    get:
      consumes:
      - application/json
      description: get levels
      operationId: get-levels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  additionalProperties:
                    type: integer
                  type: object
              type: object
      summary: Show levels
  /projects:
    get:
      consumes:
      - application/json
      description: get all projects
      operationId: get-projects
      parameters:
      - description: fuzzy search projects
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  $ref: '#/definitions/rules.Project'
              type: object
      summary: Show projects
  /projects/{id}:
    get:
      consumes:
      - application/json
      description: get project by ID
      operationId: get-projects-by-id
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Show project by id
  /rules:
    get:
      consumes:
      - application/json
      description: get all projects
      operationId: get-rules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  $ref: '#/definitions/rules.Rule'
              type: object
      summary: Show rules
  /rules/{id}:
    get:
      consumes:
      - application/json
      description: get rule by ID
      operationId: get-rules-by-id
      parameters:
      - description: Rule ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  additionalProperties: true
                  type: object
              type: object
      summary: Show rule by id
  /stats:
    get:
      consumes:
      - application/json
      description: get stats
      operationId: get-stats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                Data:
                  $ref: '#/definitions/rules.Stats'
              type: object
      summary: Show stats
  /status:
    get:
      consumes:
      - application/json
      description: get status
      operationId: get-status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Status'
      summary: Show status services
swagger: "2.0"
